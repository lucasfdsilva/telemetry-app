name: CI/CD Workflow

env:
  ECR_REPO: telemetry-app

on:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          
  terraform_validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    
    - name: Change directory to Deploy
      run: cd deploy
      
    - name: Terraform Init with no Backend
      run: terraform init -backend=false
    
    - name: Terraform FMT
      run: terraform fmt -check
      
    - name: Terraform Validate
      run: terraform validate
       

  build_and_push:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - uses: actions/checkout@v2
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPO }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        
  staging_plan:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Change directory to Deploy
        run: cd deploy

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Workspace Select or Create
        run: terraform workspace select staging || terraform workspace new staging
        
      - name: Terraform Plan
        run: terraform plan
        
        
  staging_apply:
    needs: staging_plan
    runs-on: ubuntu-latest
    steps:
      - name: Staging Terraform Apply
        run: echo "Running Terraform Apply for Stage Environment."
        
        
  prod_plan:
    needs: staging_apply
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Change directory to Deploy
        run: cd deploy

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Workspace Select or Create
        run: terraform workspace select prod || terraform workspace new prod
        
      - name: Terraform Plan
        run: terraform plan
        
        
  prod_apply:
    needs: prod_plan
    runs-on: ubuntu-latest
    steps:
      - name: Production Terraform Apply
        run: echo "Running Terraform Plan for Production Environment."
        
  
        
  
  
      

    
